{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onDataRequest","useState","errorVisible","query","setValue","newMovie","setNewMovie","console","log","sendRequest","movieQuery","a","fetch","then","response","json","foundMovie","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","onClick","App","state","data","getDataFromChild","some","setState","currentState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d40c55ac.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, {useState, useEffect} from 'react';\nimport classNames from 'classnames'\nimport {getMovies} from '../../api/api'\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n//import movies from '../../api/movies.json';\n\nexport const FindMovie = ({onDataRequest}) => {\n  const [errorVisible, setError] = useState(false);\n  const [query, setValue] = useState('');\n  const [newMovie, setNewMovie] = useState();\n  console.log(newMovie)\n\n  const sendRequest = async (movieQuery) => {\n    const movie = await getMovies(movieQuery);\n    const baseUrl = 'https://www.imdb.com/title/'\n    const foundMovie = {\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `${baseUrl}${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    }\n    console.log('foundMovie:', foundMovie); \n    setNewMovie(foundMovie)\n    \n  }\n  return (\n    \n  <>\n    <form className=\"find-movie\">\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            \n            id=\"movie-title\"\n            placeholder=\"Enter a title to search\"\n            value={query}\n            onChange={(e)=>{setValue(e.target.value)}}\n            className={classNames('input', {'is-danger': errorVisible === true})}\n          />\n        </div>\n        {errorVisible && \n        <p className=\"help is-danger\">\n          Can&apos;t find a movie with such a title\n        </p>}\n        \n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={()=> sendRequest(query)}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={() => onDataRequest(newMovie)} //Переброс мувика в родительский\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n    <div className=\"container\">\n      <h2 className=\"title\">Preview</h2>\n      {newMovie && <MovieCard {...newMovie} /*undefined до запроса*/ />} \n    </div>\n  </>\n  )\n};\n\n","const MOVIES_URL = 'http://www.omdbapi.com/?apikey=e58c951a&t='\nexport function getMovies(title){\n  return fetch(`${MOVIES_URL}${title}`)\n    .then(response => response.json())\n}\n\n\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    //errorVisible: false,\n  };\n\n\n    getDataFromChild = (newMovie) => {\n     const isSameMovie = this.state.movies.some(movie => movie.imdbID === newMovie.imdbID)\n     if(!isSameMovie) {\n      this.setState(currentState => ({\n        movies: [\n          ...currentState.movies,\n          newMovie\n        ]\n      }));\n     }\n      \n    }\n\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie \n          onDataRequest={this.getDataFromChild} /*получаю данные от дочернего*/ \n          errorVisible={this.state.errorVisible}\n          /> \n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}